import asyncio
import discord
from discord.ext import commands
from models import *
from collections import deque

bot = commands.Bot(command_prefix='')
black_list = deque()
operation = 0

lit = {
    '–∞': 567,
    '–±': 902,
    '–≤': 703,
    '–≥': 441,
    '–¥': 399,
    '–µ': 96,
    '–∂': 65,
    '–∑': 169,
    '–∏': 266,
    '–π': 30,
    '–∫': 1211,
    '–ª': 455,
    '–º': 637,
    '–Ω': 460,
    '–æ': 286,
    '–ø': 558,
    "—Ä": 337,
    '—Å': 855,
    '—Ç': 455,
    '—É': 170,
    '—Ñ': 227,
    '—Ö': 338,
    '—Ü': 31,
    '—á': 217,
    '—à': 177,
    '—â': 12,
    '—ç': 137,
    '—é': 37,
    '—è': 68
}


def fmtw(literal):
    lit = {
        '–∞': literal.l1,
        '–±': literal.l2,
        '–≤': literal.l3,
        '–≥': literal.l4,
        '–¥': literal.l5,
        '–µ': literal.l6,
        '–∂': literal.l7,
        '–∑': literal.l8,
        '–∏': literal.l9,
        '–π': literal.l10,
        '–∫': literal.l11,
        '–ª': literal.l12,
        '–º': literal.l13,
        '–Ω': literal.l14,
        '–æ': literal.l15,
        '–ø': literal.l16,
        "—Ä": literal.l17,
        '—Å': literal.l18,
        '—Ç': literal.l19,
        '—É': literal.l20,
        '—Ñ': literal.l21,
        '—Ö': literal.l22,
        '—Ü': literal.l23,
        '—á': literal.l24,
        '—à': literal.l25,
        '—â': literal.l26,
        '—ç': literal.l27,
        '—é': literal.l28,
        '—è': literal.l29
    }
    return lit


def equally_lit(literal, lit):
    literal.l1 = lit['–∞']
    literal.l2 = lit['–±']
    literal.l3 = lit['–≤']
    literal.l4 = lit['–≥']
    literal.l5 = lit['–¥']
    literal.l6 = lit['–µ']
    literal.l7 = lit['–∂']
    literal.l8 = lit['–∑']
    literal.l9 = lit['–∏']
    literal.l10 = lit['–π']
    literal.l11 = lit['–∫']
    literal.l12 = lit['–ª']
    literal.l13 = lit['–º']
    literal.l14 = lit['–Ω']
    literal.l15 = lit['–æ']
    literal.l16 = lit['–ø']
    literal.l17 = lit['—Ä']
    literal.l18 = lit['—Å']
    literal.l19 = lit['—Ç']
    literal.l20 = lit['—É']
    literal.l21 = lit['—Ñ']
    literal.l22 = lit['—Ö']
    literal.l23 = lit['—Ü']
    literal.l24 = lit['—á']
    literal.l25 = lit['—à']
    literal.l26 = lit['—â']
    literal.l27 = lit['—ç']
    literal.l28 = lit['—é']
    literal.l29 = lit['—è']
    session.commit()


def lit_count(channel_id, city_id):
    city = session.query(Town).filter_by(id=city_id).first()
    print(city.name)
    literal = session.query(Literals).filter_by(channel_id=channel_id).first()
    lit = fmtw(literal)
    for i in lit:
        if city.first_literal == i:

            lit[i] -= 1

    equally_lit(literal, lit)




def lit_zero():
    for i in session.query(Literals).order_by(Literals.id):
        i.count = 0
    session.commit()


def count_lit():
    lit_zero()


def last_letter(town, channel_id):
    n = len(town) - 1
    literal = session.query(Literals).filter_by(channel_id=channel_id).first()
    lit_list = fmtw(literal)

    while town[n] == '—ã' or town[n] == '—å' or town[n] == '—ä' or town[n] == ')' or town[n] == '—ë' and lit_list[town[n]] == 0:
        n -= 1

    return town[n]


def out(channel_id):
    s = ""
    literal = session.query(Literals).filter_by(channel_id=channel_id).first()
    for i in fmtw(literal):
        s += f'{i} {fmtw(literal)[i]}\n'
    return s


def search_last(channel_id):
    lit = session.query(Literals).filter_by(channel_id=channel_id).first()
    last = session.query(Town).filter_by(id=lit.last).first()
    print(last.name)
    return last


def stop_game(channel_id):
    session.delete(session.query(Literals).filter_by(channel_id=channel_id).first())
    for i in session.query(Used).filter_by(channel_id=channel_id).order_by(Used.id):
        session.delete(i)
    session.commit()


def start_game(channel_id):
    lit = Literals(channel_id)
    session.add(lit)
    last = session.query(Town).filter_by(id=lit.last).first()
    print(last.name)
    used = Used(channel_id, lit.last)
    session.add(used)
    session.commit()
    lit_count(channel_id, lit.last)


async def del_self(message):
    channel_id = message.channel.id
    last = search_last(channel_id)

    def check(user, reaction):
        return user == message.author and str(reaction.emoji) == 'üëç'

    try:
        reaction, user = await bot.wait_for('reaction_add', timeout=30.0, check=check)
    except asyncio.TimeoutError:
        await message.channel.purge(limit=1)
        await message.channel.send(
            "–°–ª–µ–¥—É—é—â–∏–π –≥–æ—Ä–æ–¥ –Ω–∞ –±—É–∫–≤—É [" + last_letter(last.name, channel_id) + "]")
    else:
        await message.channel.send('üëç')
